Prompt esencial para frontend

Descripción rápida
------------------
El backend expone un endpoint OCR que recibe una imagen (form field `file`) y devuelve un JSON con los campos extraídos: `fecha` (ISO), `monto` (float), `monto_raw` (string), `merchant`, `texto`/`texto_lines` y, si se solicita, `tokens` y `monto_debug` para debugging.

Endpoint y uso
--------------
- Ruta: POST /api/ocr
- Body: multipart/form-data con campo `file` (imagen jpg/png).
- Query opcional: `debug_tokens=true` — incluye `tokens` y `monto_debug` en la respuesta.

JSON mínimo esperado (campos clave)
---------------------------------
- `fecha`: string | null — ISO yyyy-mm-dd
- `monto`: number | null — monto normalizado (float) para cálculos
- `monto_raw`: string | null — cadena tal cual ensamblada por OCR (ej. "353,37")
- `merchant`: string | null — comercio detectado
- `texto`: string — texto OCR agregado
- `texto_lines`: array[string] — texto por líneas
- `tokens`: array[ { text, conf, left, top, width, height } ] (solo con debug_tokens)
- `monto_debug`: array[ { chosen, parsed, method, ... } ] (explicaciones de heurísticas)

Notas sobre `tokens`
--------------------
- Cada token tiene `left`,`top`,`width`,`height` en píxeles relativos a la imagen original.
- `width`/`height` pueden ser 0 o negativos; al dibujar normalizar bbox usando min/max y abs().
- Si escalas la imagen en frontend, aplica la misma escala a las coordenadas para el overlay.

Comportamiento recomendado en UI
--------------------------------
- Al enviar: mostrar spinner.
- Al recibir: mostrar `merchant`, `fecha`, `monto` (usar `monto` para cálculos). Mostrar `monto_raw` y `monto_debug` en modo debug.
- Proveer botón "Ver tokens" (solo si pediste `debug_tokens=true`) para overlay con colores por `conf`.
- Permitir edición manual de `monto`, `fecha`, `merchant` y guardar la corrección; registrar `monto_raw` original.

Errores importantes
------------------
- 400: petición inválida (ej. falta `file`) — frontend debe avisar al usuario.
- 413: archivo demasiado grande.
- 500: error interno — mostrar mensaje genérico y permitir reintento.

Formato de moneda
-----------------
- `monto` es float (ej. 353.37). Para mostrarlo con coma decimal en UI usar formateo local (Intl.NumberFormat).

Recomendación para QA
---------------------
- Durante desarrollo activar `debug_tokens=true` y validar overlays y `monto_debug` para entender errores OCR.

Ejemplo mínimo de uso (fetch):
```js
const fd = new FormData();
fd.append('file', fileInput.files[0]);
const res = await fetch('/api/ocr?debug_tokens=true', { method: 'POST', body: fd });
const data = await res.json();
// usar data.monto, data.monto_raw, data.tokens
```

Fin.
